<h1>{{Book.Title}}</h1>

{{#User.IsAdmin}}
    <dialog id="edit-dialog">
        <h2>Edit book</h2>
        <div class="flex-horizontal" style="gap: 8px">
            <img src="/api/books/{{Book.ID}}/cover" style="width: 10%; min-width: 100px; align-self: flex-start;" class="flex-shrink" />
            <form onsubmit="editBook(event)" class="flex-vertical flex-grow" id="edit-book"
            >
                <label for="title">Title</label>
                <input name="title" type="text" value="{{Book.Title}}" />

                <label for="isbn">ISBN</label>
                <input name="isbn" type="text" value="{{#Book.ISBN}}{{.}}{{/Book.ISBN}}" />

                <label for="description">Description</label>
                <textarea name="description" style="resize: vertical; min-height: 5rem">{{#Book.Description}}{{.}}{{/Book.Description}}</textarea>

                <label for="authors">Authors</label>
                <input type="text" value="{{#Book.SAuthors}}{{.}}{{/Book.SAuthors}}" name="authors" />

                <label for="tags">Tags</label>
                <input type="text" value="{{#Book.STags}}{{.}}{{/Book.STags}}" name="tags"/>

                <div class="flex-horizontal grow">
                    <input type="submit" value="Update" class="flex-grow" />
                    <button type="button" onclick="closeModal('edit-dialog')" class="flex-grow danger">Cancel</button>
                </div>
            </form>
        </div>
    </dialog>

    <script>
    function editBook(event) {
        event.preventDefault();

        let form = event.target;
        let title = form["title"].value;
        let isbn = form["isbn"].value.trim();
        let description = form["description"].value.trim();
        let authors = form["authors"]
            .value
            .split("&")
            .map(it => it.trim())
            .filter(it => it != "");
        let tags = form["tags"]
            .value
            .split(" ")
            .filter(it => it != "");

        fetch("/api/books/{{Book.ID}}/edit", {
            method: "POST",
            body: JSON.stringify({
                title: title,
                description: description || null,
                isbn: isbn || null,
                authors: authors,
                tags: tags,
            }),
            credentials: "include"
        })
            .then(res => {
                if (res.status == 404) {
                    showDialog("Failed to find book. Has the book been deleted since you opened the page?");
                } else if (res.status != 200) {
                    showDialog("Failed to update book");
                } else if (res.status == 200) {
                    res.json().then(() => {
                        location.reload();
                    });
                }
            })
            .catch(err => {
                console.error(err);
                showDialog("Failed to connect to the server");
            });
        return false;
    }

    </script>
{{/User.IsAdmin}}

<div class="book-details p-nopad">
    <div class="header style-secondary flex-horizontal-rev">
        {{#User.IsAdmin}}
        <a class="p8" href="#" onclick="initModal('edit-dialog', true)" aria-label="Edit book metadata">
            ‚úèÔ∏è
        </a>
        {{/User.IsAdmin}}
        <a class="p8" href="/api/books/{{Book.ID}}/download" target="_blank" download="true" aria-label="Download book">
            üì•
        </a>
    </div>

    <div class="detail-section flex-horizontal">
        <aside class="flex-shrink">
            <a class="flex-vertical shadow flex-nogap" href="/books/{{Book.ID}}/reader.html">
                <img src="/api/books/{{Book.ID}}/cover" />
                <p class="book-box">Read</p>
            </a>
        </aside>
        <div class="flex-vertical">
            <div class="tag-container flex-horizontal">
                {{#Book.Tags}}
                <span class="tag" data-rawtag="{{Name}}"></span>
                {{/Book.Tags}}
            </div>
            {{#Book.Description}}
            <p>{{Book.Description}}</p>
            {{/Book.Description}}
            {{^Book.Description}}
            <p class="disabled">This book does not currently have a description</p>
            {{/Book.Description}}
        </div>
    </div>

</div>

<script>
for (let elem of document.getElementsByClassName("tag")) {
    let tagName = elem.getAttribute("data-rawtag");
    if (tagName !== null && elem.innerText != "") {
        elem.innerText = tagName.replace("_", " ");
    }
}
</script>
