name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@main
      # Should not be necessary, looks like setup-conan invokes this automagically
      #- uses: actions/setup-python@v5
        #with:
          #python-version: '3.12'
      - name: Install Conan
        uses: conan-io/setup-conan@v1
        with:
          python_Version: '3.12'
      - name: Patch conan remotes
        run: |
          conan remote update conancenter --url https://center2.conan.io
      - name: Install deps
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y uuid-dev libasio-dev libpq-dev postgresql firefox
          python3 -m pip install cmake --break-system-packages
          python3 -m pip install -r tests/requirements.txt --break-system-packages
      - name: Print environment
        run: |
          cmake --version
      - name: Run build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_POLICY_VERSION_MINIMUM=3.5
          make -j $(nproc)
      - name: Initialise database
        run: |
          sudo systemctl start postgresql
          PSQL_PASSWORD=password ./scripts/dev/dbinit.sh
          ./scripts/dev/setup-testdb.sh
      - name: Setup .env
        run: |
          tee .env << EOF
          PSQL_PASSWORD=password
          EOF
      - name: Run backend tests
        run: |
          cd build
          cmake --build . --target test
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v4
      - name: Run frontend and integration tests
        run: |
          cd build 
          cmake --build . --target test-frontend
        env:
          SE_GECKODRIVER: /snap/bin/geckodriver
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y uuid-dev libasio-dev libpq-dev postgresql
          python3 -m pip install cmake --break-system-packages
      - name: Print environment
        run: |
          cmake --version
      - name: Run build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DJADE_LINT=ON -DLINT_WARNINGS_ARE_ERRORS=ON -DCMAKE_POLICY_VERSION_MINIMUM=3.5
          make -j $(nproc)
